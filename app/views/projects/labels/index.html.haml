- @no_container = true
- page_title "Labels"
- can_admin_label = can?(current_user, :admin_label, @project)
- hide_class = ''

- if can_admin_label
  - content_for(:header_content) do
    .nav-controls
      = link_to _('New label'), new_project_label_path(@project), class: "btn btn-new"

- if @labels.exists? || @prioritized_labels.exists?
  #promote-label-modal
  %div{ class: container_class }
    .top-area.adjust
      .nav-text
        = _('Labels can be applied to issues and merge requests.')
        - if can_admin_label
          = _('Star a label to make it a priority label. Order the prioritized labels to change their relative priority, by dragging.')

    .labels-container.prepend-top-5
      - if can_admin_label
        -# Only show it in the first page
        - hide = @available_labels.empty? || (params[:page].present? && params[:page] != '1')
        .prioritized-labels{ class: ('hide' if hide) }
          %h5.prepend-top-10= _('Prioritized Labels')
          .content-list.manage-labels-list.js-prioritized-labels{ "data-url" => set_priorities_project_labels_path(@project) }
            #js-priority-labels-empty-state.priority-labels-empty-state{ class: "#{'hidden' unless @prioritized_labels.empty?}" }
              = render 'shared/empty_states/priority_labels'
            - if @prioritized_labels.present?
              = render partial: 'shared/label', subject: @project, collection: @prioritized_labels, as: :label, locals: { force_priority: true }

      - if @labels.present?
        .other-labels
          - if can_admin_label
            %h5{ class: ('hide' if hide) }= _('Other Labels')
          .content-list.manage-labels-list.js-other-labels
            = render partial: 'shared/label', subject: @project, collection: @labels, as: :label
            = paginate @labels, theme: 'gitlab'
- else
  = render 'shared/empty_states/labels'

%template#js-badge-item-template
  %li.label-link-item.js-priority-badge.inline.prepend-left-10
    .label-badge.label-badge-blue= _('Prioritized label')
